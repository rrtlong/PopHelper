package com.moli.module.framework.utilsimport android.app.Activityimport android.app.Applicationimport android.os.Bundleimport android.os.Handlerimport timber.log.Timber/** * 项目名称：Platformer * 类描述： * 创建人：liujun * 创建时间：2017/10/16 11:10 * 修改人：liujun * 修改时间：2017/10/16 11:10 * 修改备注： * @version */object Foreground : Application.ActivityLifecycleCallbacks {    private val CHECK_DELAY = 500L    //用于判断是否程序在前台    private var foreground = false    private var paused = true    //handler用于处理切换activity时的短暂时期可能出现的判断错误    private val handler = Handler()    private var check: Runnable? = null    fun init(app: Application) {        app.registerActivityLifecycleCallbacks(this)    }    /**     * 判断程序是否在前台     *     * @return true:前台  false:后台     */    fun isForeground(): Boolean {        return foreground    }    override fun onActivityPaused(activity: Activity?) {        paused = true        if (check != null) {            handler.removeCallbacks(check)        }        check = Runnable {            if (foreground && paused) {                foreground = false                Timber.d("went background")            } else {                Timber.d("still foreground")            }        }        handler.postDelayed(check, CHECK_DELAY)    }    override fun onActivityResumed(activity: Activity?) {        paused = false        foreground = true        if (check != null) {            handler.removeCallbacks(check)        }    }    override fun onActivityStarted(activity: Activity?) {    }    override fun onActivityDestroyed(activity: Activity?) {    }    override fun onActivitySaveInstanceState(activity: Activity?, outState: Bundle?) {    }    override fun onActivityStopped(activity: Activity?) {    }    override fun onActivityCreated(activity: Activity?, savedInstanceState: Bundle?) {    }}